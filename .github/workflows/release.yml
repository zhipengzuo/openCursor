name: Build and Release

on:
  release:
    types: [created, published]
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  GO_VERSION: '1.21'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
          - goos: windows
            goarch: amd64
            suffix: windows-amd64.exe

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Get version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "release" ]]; then
          VERSION="${{ github.event.release.tag_name }}"
        elif [[ "$GITHUB_REF" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION="dev-$(git rev-parse --short HEAD)"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Building version: $VERSION"

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        BINARY_NAME="openCursor-${{ matrix.suffix }}"
        go build -ldflags="-s -w -X main.Version=${{ steps.version.outputs.version }}" -o "$BINARY_NAME"
        ls -la "$BINARY_NAME"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: openCursor-${{ matrix.suffix }}
        path: openCursor-${{ matrix.suffix }}

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./binaries

    - name: List downloaded files
      run: |
        echo "Downloaded files:"
        find ./binaries -type f -exec ls -la {} \;

    - name: Create checksums
      run: |
        cd ./binaries
        find . -name "openCursor-*" -type f -exec sha256sum {} \; > checksums.txt
        cat checksums.txt

    - name: Get tag name
      id: tag
      run: |
        if [[ "${{ github.event_name }}" == "release" ]]; then
          TAG_NAME="${{ github.event.release.tag_name }}"
        else
          TAG_NAME=${GITHUB_REF#refs/tags/}
        fi
        echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT

    - name: Upload to release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        files: |
          ./binaries/*/openCursor-*
          ./binaries/checksums.txt
        body: |
          ## 🚀 openCursor ${{ steps.tag.outputs.tag }}
          
          ### 📦 下载说明
          
          **macOS 用户：**
          - Intel 芯片: `openCursor-darwin-amd64`
          - Apple Silicon (M1/M2/M3): `openCursor-darwin-arm64`
          
          **Linux 用户：**
          - x86_64: `openCursor-linux-amd64`  
          - ARM64: `openCursor-linux-arm64`
          
          **Windows 用户：**
          - x86_64: `openCursor-windows-amd64.exe`
          
          ### 📋 快速安装
          
          ```bash
          # macOS/Linux - 下载并安装
          wget https://github.com/${{ github.repository }}/releases/download/${{ steps.tag.outputs.tag }}/openCursor-darwin-amd64
          chmod +x openCursor-darwin-amd64
          sudo mv openCursor-darwin-amd64 /usr/local/bin/openCursor
          
          # 配置API密钥
          export OPENAI_API_KEY="your-deepseek-api-key"
          
          # 开始使用
          openCursor "Hello world"
          ```
          
          ### 🔍 文件校验
          
          ```bash
          sha256sum -c checksums.txt
          ```
        token: ${{ secrets.GITHUB_TOKEN }} 